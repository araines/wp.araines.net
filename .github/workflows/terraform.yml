name: Terraform

on:
  push:
    branches: ["main"]

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "arn:aws:iam::263804027495:role/blog-github-oidc" #TODO: account id hardcoded here
          aws-region: eu-west-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - run: terraform init

      - run: terraform fmt -check

      - run: terraform plan -input=false

      - run: terraform apply -input=false -auto-approve

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: "arn:aws:iam::263804027495:role/blog-github-oidc" #TODO: account id hardcoded here
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: Build and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: blog-serverless-wordpress #TODO: Get this from Terraform perhaps?
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG wordpress
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
